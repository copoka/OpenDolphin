/*
 * ColorPanelBean.java
 *
 * Created on 2001/09/02, 23:36
 */

package jp.ac.kumamoto_u.kuh.fc.jsato.swing_beans;

import java.awt.*;
import javax.swing.*;
import java.awt.event.*;

/**
 *
 * @author  Junzo SATO
 * @copyright   Copyright (c) 2001, Junzo SATO. All rights reserved.
 */
public class ColorPanelBean extends javax.swing.JPanel {

    /** Holds value of property panelColor. */
    private Color panelColor;
    
    /** Utility field used by bound properties. */
    private java.beans.PropertyChangeSupport propertyChangeSupport =  new java.beans.PropertyChangeSupport (this);
    
    /** Creates new form ColorPanelBean */
    public ColorPanelBean() {
        initComponents ();
        
        panelColor = Color.red;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        
        setLayout(new java.awt.BorderLayout());
        
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        
    }//GEN-END:initComponents

    private boolean entered = false;
    
  private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
// Add your handling code here:
      entered = false;
      repaint();
  }//GEN-LAST:event_formMouseExited

  private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
// Add your handling code here:
      entered = true;
      repaint();
  }//GEN-LAST:event_formMouseEntered

    JColorChooser cc = null;
    JDialog dlg = null;
    class CCListener implements ActionListener {
        public void actionPerformed(ActionEvent evt) {
            JButton b = (JButton)evt.getSource();
            
            if (b.getText().equals("óπâ"/*"OK"*/)) {
                ColorPanelBean.this.setPanelColor(cc.getColor());
                System.out.println("OK");
            } else if (b.getText().equals("éÊè¡Çµ"/*"Cancel"*/)) {
                dlg.dispose();
                dlg = null;
                cc = null;
                System.out.println("Cancel");
            }
            
            entered = false;
            ColorPanelBean.this.repaint();
        }
    }
    
  private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
// Add your handling code here:
      // show color chooser
      
      //if (evt.getClickCount() != 2) return;

      cc = new JColorChooser(panelColor);
      if (cc == null) {
          System.out.println("Couldn't create JColorChooser");
          return;
      }
      dlg = cc.createDialog(this, "Color Chooser", true, cc, new CCListener(), new CCListener());
      //dlg.show();
      dlg.setVisible(true);
  }//GEN-LAST:event_formMouseClicked

    /** Add a PropertyChangeListener to the listener list.
     * @param l The listener to add.
 */
    public void addPropertyChangeListener(java.beans.PropertyChangeListener l) {
        propertyChangeSupport.addPropertyChangeListener (l);
    }    

    /** Removes a PropertyChangeListener from the listener list.
     * @param l The listener to remove.
 */
    public void removePropertyChangeListener(java.beans.PropertyChangeListener l) {
        propertyChangeSupport.removePropertyChangeListener (l);
    }
    
    /** Getter for property panelColor.
     * @return Value of property panelColor.
 */
    public Color getPanelColor() {
        return panelColor;
    }
    
    /** Setter for property panelColor.
     * @param panelColor New value of property panelColor.
 */
    public void setPanelColor(Color panelColor) {
        Color oldPanelColor = this.panelColor;
        this.panelColor = panelColor;
        propertyChangeSupport.firePropertyChange ("panelColor", oldPanelColor, panelColor);
        
        repaint();
    }
    
    public void paint(java.awt.Graphics g) {
        Dimension d = this.getSize();
        
        g.setColor(Color.white);
        g.fillRect(0,0,d.width,d.height);
        
        g.setColor(panelColor);
        g.fillRect(2,2,d.width-4,d.height-4);
        
        if (entered) {
            g.setColor(Color.black);
            g.drawRect(0,0,d.width-1,d.height-1);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
