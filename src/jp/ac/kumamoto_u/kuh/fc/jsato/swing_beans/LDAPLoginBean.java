/*
 * LDAPLoginBean.java
 *
 * Created on 2001/08/22, 11:39
 */

package jp.ac.kumamoto_u.kuh.fc.jsato.swing_beans;

import java.awt.*;

//uid=directorymanager,ou=Managers,o=Dolphin
//secret

// cn=Manager,o=Dolphin
// hanagui

/**
 *
 * @author  Junzo SATO
 * @copyright   Copyright (c) 2001, Junzo SATO. All rights reserved.
 */

/*
 *
 * localhost uses port 389
 *
 * for airius.com
 * baseDN = "o=airius.com"
 * bindDN = "cn=Directory Manager,o=airius.com"
 * password = "secret"
 *
 * for Dolphin
 * baseDN = "dc=digital-globe,dc=jp"
 * bindDN = "cn=Manager,dc=digital-globe,dc=jp"
 * password = "hanagui"
 *
 */
public class LDAPLoginBean extends javax.swing.JPanel {

    /** Holds value of property host. */
    private String host;
    
    /** Utility field used by bound properties. */
    private java.beans.PropertyChangeSupport propertyChangeSupport = new java.beans.PropertyChangeSupport (this);
    
    /** Holds value of property port. */
    private int port;
    
    /** Holds value of property baseDN. */
    private String baseDN;
    
    /** Holds value of property bindDN. */
    private String bindDN;
    
    /** Holds value of property password. */
    private String password;
    
    /** Creates new form LDAPLoginBean */
    public LDAPLoginBean() {
        initComponents ();
        
        host = tfHost.getText();
        port = Integer.parseInt(tfPort.getText());
        baseDN = tfBaseDN.getText();
        bindDN = tfBindDN.getText();
        password = new String(tfPassword.getPassword());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfHost = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfPort = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfBaseDN = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tfBindDN = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tfPassword = new javax.swing.JPasswordField();
        
        setBorder(new javax.swing.border.TitledBorder("LDAP Connection"));
        setMaximumSize(new java.awt.Dimension(410, 210));
        setMinimumSize(new java.awt.Dimension(410, 210));
        setPreferredSize(new java.awt.Dimension(410, 210));
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        
        jPanel7.setPreferredSize(new java.awt.Dimension(400, 30));
        jLabel1.setText("Host");
        jPanel7.add(jLabel1);
        
        tfHost.setText("localhost");
        tfHost.setPreferredSize(new java.awt.Dimension(300, 20));
        tfHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHostActionPerformed(evt);
            }
        });
        
        jPanel7.add(tfHost);
        
        add(jPanel7);
        
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        
        jPanel8.setPreferredSize(new java.awt.Dimension(400, 30));
        jLabel2.setText("Port");
        jPanel8.add(jLabel2);
        
        tfPort.setText("389");
        tfPort.setPreferredSize(new java.awt.Dimension(300, 20));
        tfPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPortActionPerformed(evt);
            }
        });
        
        jPanel8.add(tfPort);
        
        add(jPanel8);
        
        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        
        jPanel9.setPreferredSize(new java.awt.Dimension(400, 30));
        jLabel3.setText("BaseDN");
        jPanel9.add(jLabel3);
        
        tfBaseDN.setText("o=Dolphin");
        tfBaseDN.setPreferredSize(new java.awt.Dimension(300, 20));
        tfBaseDN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBaseDNActionPerformed(evt);
            }
        });
        
        jPanel9.add(tfBaseDN);
        
        add(jPanel9);
        
        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        
        jPanel10.setPreferredSize(new java.awt.Dimension(400, 30));
        jLabel4.setText("BindDN");
        jPanel10.add(jLabel4);
        
        tfBindDN.setText("uid=directorymanager,ou=Managers,o=Dolphin");
        tfBindDN.setPreferredSize(new java.awt.Dimension(300, 20));
        tfBindDN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBindDNActionPerformed(evt);
            }
        });
        
        jPanel10.add(tfBindDN);
        
        add(jPanel10);
        
        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        
        jPanel11.setPreferredSize(new java.awt.Dimension(400, 30));
        jLabel5.setText("Password");
        jPanel11.add(jLabel5);
        
        tfPassword.setText("secret");
        tfPassword.setPreferredSize(new java.awt.Dimension(300, 20));
        tfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPasswordActionPerformed(evt);
            }
        });
        
        jPanel11.add(tfPassword);
        
        add(jPanel11);
        
    }//GEN-END:initComponents

  private void tfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPasswordActionPerformed
// Add your handling code here:
       password = new String(tfPassword.getPassword());
  }//GEN-LAST:event_tfPasswordActionPerformed

  private void tfBindDNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBindDNActionPerformed
// Add your handling code here:
        bindDN = tfBindDN.getText();
  }//GEN-LAST:event_tfBindDNActionPerformed

  private void tfBaseDNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBaseDNActionPerformed
// Add your handling code here:
        baseDN = tfBaseDN.getText();
  }//GEN-LAST:event_tfBaseDNActionPerformed

  private void tfPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPortActionPerformed
// Add your handling code here:
        port = Integer.parseInt(tfPort.getText());
  }//GEN-LAST:event_tfPortActionPerformed

  private void tfHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHostActionPerformed
// Add your handling code here:
        host = tfHost.getText();
  }//GEN-LAST:event_tfHostActionPerformed

  public void updateProperties() {
        host = tfHost.getText();
        port = Integer.parseInt(tfPort.getText());
        baseDN = tfBaseDN.getText();
        bindDN = tfBindDN.getText();
        password = new String(tfPassword.getPassword());
  }
    /** Add a PropertyChangeListener to the listener list.
     * @param l The listener to add.
 */
    public void addPropertyChangeListener(java.beans.PropertyChangeListener l) {
        propertyChangeSupport.addPropertyChangeListener (l);
    }    

    /** Removes a PropertyChangeListener from the listener list.
     * @param l The listener to remove.
 */
    public void removePropertyChangeListener(java.beans.PropertyChangeListener l) {
        propertyChangeSupport.removePropertyChangeListener (l);
    }
    
    /** Getter for property host.
     * @return Value of property host.
 */
    public String getHost() {
        return host;
    }
    
    /** Setter for property host.
     * @param host New value of property host.
 */
    public void setHost(String host) {
        String oldHost = this.host;
        this.host = host;
        propertyChangeSupport.firePropertyChange ("host", oldHost, host);
        
        tfHost.setText(this.host);
    }
    
    /** Getter for property port.
     * @return Value of property port.
 */
    public int getPort() {
        return port;
    }
    
    /** Setter for property port.
     * @param port New value of property port.
 */
    public void setPort(int port) {
        int oldPort = this.port;
        this.port = port;
        propertyChangeSupport.firePropertyChange ("port", new Integer (oldPort), new Integer (port));
        
        tfPort.setText(String.valueOf(port));
    }
    
    /** Getter for property baseDN.
     * @return Value of property baseDN.
 */
    public String getBaseDN() {
        return baseDN;
    }
    
    /** Setter for property baseDN.
     * @param baseDN New value of property baseDN.
 */
    public void setBaseDN(String baseDN) {
        String oldBaseDN = this.baseDN;
        this.baseDN = baseDN;
        propertyChangeSupport.firePropertyChange ("baseDN", oldBaseDN, baseDN);

        tfBaseDN.setText(this.baseDN);
     }
    
    /** Getter for property bindDN.
     * @return Value of property bindDN.
 */
    public String getBindDN() {
        return bindDN;
    }
    
    /** Setter for property bindDN.
     * @param bindDN New value of property bindDN.
 */
    public void setBindDN(String bindDN) {
        String oldBindDN = this.bindDN;
        this.bindDN = bindDN;
        propertyChangeSupport.firePropertyChange ("bindDN", oldBindDN, bindDN);
        
        tfBindDN.setText(this.bindDN);
    }
    
    /** Getter for property password.
     * @return Value of property password.
 */
    public String getPassword() {
        return password;
    }
    
    /** Setter for property password.
     * @param password New value of property password.
 */
    public void setPassword(String password) {
        String oldPassword = this.password;
        this.password = password;
        propertyChangeSupport.firePropertyChange ("password", oldPassword, password);
        
        tfPassword.setText(this.password);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField tfHost;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField tfPort;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField tfBaseDN;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField tfBindDN;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField tfPassword;
    // End of variables declaration//GEN-END:variables

}
