/*
 * JComboBoxTest.java
 *
 * Created on 2002/12/01, 16:34
 */

package jp.ac.kumamoto_u.kuh.fc.jsato.swing_beans;

import javax.swing.*;
import jp.ac.kumamoto_u.kuh.fc.jsato.*;
import java.util.*;
import java.awt.event.*;

/**
 *
 * @author  Administrator
 */
public class JComboBoxTest extends javax.swing.JFrame {
    
    JComboBox combo = null;
    Hashtable inv = null;
    
    /** Creates new form JComboBoxTest */
    public JComboBoxTest() {
        initComponents();

        /*
        CSVParser.parse(
            JComboBoxTest.class.getResource(
                "/jp/ac/kumamoto_u/kuh/fc/jsato/mml_table/MML0033.csv"
            ).getPath()
        );
         */
        
        /*
        Hashtable ht = CSVParser.parseAsHashtable(
            JComboBoxTest.class.getResource(
                "/jp/ac/kumamoto_u/kuh/fc/jsato/mml_table/MML0033.csv"
            ).getPath()
        );
         */
        
        Hashtable ht = CSVParser.parseAsHashtableFromStream(
            JComboBoxTest.class.getResourceAsStream(
                "/jp/ac/kumamoto_u/kuh/fc/jsato/mml_table/MML0033.csv"
            )
        );
        
        inv = CSVParser.getInverseTable(ht);
        
        Vector v = CSVParser.parseAsValueVectorFromStream(
            JComboBoxTest.class.getResourceAsStream(
                "/jp/ac/kumamoto_u/kuh/fc/jsato/mml_table/MML0033.csv"
            )
        );
        
        // drop first item
        v.removeElementAt(0);
        
        System.out.println(v.toString());
        
        for (int k = 0; k < v.size(); ++k) {
            //System.out.println(ht.containsValue(v.elementAt(k)));
            
            if (inv.containsKey(v.elementAt(k))) {
                System.out.print("SOURCE: " + v.elementAt(k));
                System.out.println("");
                System.out.println("RESULT: " + inv.get(v.elementAt(k)));
            }
        }
        
        combo = new JComboBox(v);
        getContentPane().add(combo, java.awt.BorderLayout.CENTER);
        combo.setSelectedIndex(24);
        
        combo.addActionListener(
            new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    if (e.getSource().equals(combo)) {
                        System.out.println(
                            "SELECTED: " + combo.getSelectedItem()
                        );
                        
                        if (inv.containsKey(combo.getSelectedItem())) {
                            System.out.println(
                                "RESULT: " + inv.get(combo.getSelectedItem())
                            );
                        }
                    }
                }
            }
        );
        
        pack();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }//GEN-END:initComponents
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new JComboBoxTest().show();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
